'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mergeCustomConfig = require('atool-build/lib/mergeCustomConfig');

var _mergeCustomConfig2 = _interopRequireDefault(_mergeCustomConfig);

var _getWebpackCommonConfig = require('atool-build/lib/getWebpackCommonConfig');

var _getWebpackCommonConfig2 = _interopRequireDefault(_getWebpackCommonConfig);

var _webpack = require('atool-build/lib/webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _path = require('path');

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var webpackConfig = undefined;

exports.default = {
  'middleware.before': function middlewareBefore() {
    var _this = this;

    var cwd = this.cwd;
    var applyPlugins = this.applyPlugins;
    var query = this.query;

    var customConfigPath = (0, _path.join)(cwd, query.config || 'webpack.config.js');
    webpackConfig = (0, _getWebpackCommonConfig2.default)(this);
    webpackConfig.devtool = '#source-map';

    webpackConfig.plugins.push(new _webpack.ProgressPlugin(function (percentage, msg) {
      var stream = process.stderr;
      if (stream.isTTY && percentage < 0.71 && _this.get('__ready')) {
        stream.cursorTo(0);
        stream.write('ðŸ“¦  ' + _chalk2.default.magenta(msg));
        stream.clearLine(1);
      } else if (percentage === 1) {
        console.log(_chalk2.default.green('\nwebpack: bundle build is now finished.'));
      }
    }));

    webpackConfig = applyPlugins('atool-build.updateWebpackConfig', webpackConfig);
    webpackConfig = (0, _mergeCustomConfig2.default)(webpackConfig, customConfigPath, 'development');
  },
  'middleware': function middleware() {
    var verbose = this.query.verbose;

    var compiler = (0, _webpack2.default)(webpackConfig);
    this.set('compiler', compiler);
    compiler.plugin('done', function doneHandler(stats) {
      if (verbose || stats.hasErrors()) {
        console.log(stats.toString({ colors: true }));
      }
    });
    return require('koa-webpack-dev-middleware')(compiler, (0, _objectAssign2.default)({
      publicPath: '/',
      quiet: true
    }, this.query));
  }
};
module.exports = exports['default'];